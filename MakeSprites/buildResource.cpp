#include "buildResource.h"

#include <QFileInfo>
#include <QDir>
#include <QApplication>
///--------------------------------------------------------------------------------------






   
 ///=====================================================================================
///
/// constructor
/// 
/// 
///--------------------------------------------------------------------------------------
ABuildResource :: ABuildResource (const QString &fileName)
	:
	mFileName(fileName)
{


}
///--------------------------------------------------------------------------------------






   
 ///=====================================================================================
///
/// destructor
/// 
/// 
///--------------------------------------------------------------------------------------
ABuildResource :: ~ABuildResource ()
{


}
///--------------------------------------------------------------------------------------










   
 ///=====================================================================================
///
/// Установка ошибки 
/// 
/// 
///--------------------------------------------------------------------------------------
void ABuildResource :: setError(const QString &error)
{
	mError = error;
	message(error);
}
///--------------------------------------------------------------------------------------






   
 ///=====================================================================================
///
/// отсылка сообщения 
/// 
/// 
///--------------------------------------------------------------------------------------
void ABuildResource :: message(const QString &msg)
{
	emit(signal_message(msg));
	qApp->processEvents();
}
///--------------------------------------------------------------------------------------







 ///=====================================================================================
///
/// возвратим текущий католог где можно сохранять файлы
/// 
/// 
///--------------------------------------------------------------------------------------
QString ABuildResource :: contentPath() const
{
	QFileInfo inf(mFileName);
	//return inf.path() + QDir::separator() + QTEXT("Common");
	return inf.path();
}
///--------------------------------------------------------------------------------------






 ///=====================================================================================
///
/// имя файла без расширения
/// 
/// 
///--------------------------------------------------------------------------------------
QString ABuildResource :: baseFileName() const
{
	QFileInfo inf(mFileName);
	return inf.baseName();
}
///--------------------------------------------------------------------------------------








 ///=====================================================================================
///
/// название главного файла для экспорта
/// 
/// 
///--------------------------------------------------------------------------------------
QString ABuildResource :: exportFileName() const
{
	return mFileName;
}
///--------------------------------------------------------------------------------------







 ///=====================================================================================
///
/// сохранение файла на диск	
/// 
/// 
///--------------------------------------------------------------------------------------
bool ABuildResource :: saveFile(const QString &fileName, const QString &xml)
{
	QFileInfo inf(fileName);
	QDir dir(inf.path());
	if (!dir.exists())
	{
		if (!dir.mkpath(inf.path()))
		{
			setError(inf.path() + QTEXT(" Каталог не создан!"));
			return false;
		}
	}


	QFile file(fileName);
	if (!file.open(QIODevice::WriteOnly)) 
	{
		setError(fileName + QTEXT(" - Невозможно открыть файл для записи. ") + file.errorString())    ;
        return false;
    }
	
	file.write(xml.toUtf8());
	file.close();
	return true;
}
///--------------------------------------------------------------------------------------





